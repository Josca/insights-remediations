{{ if .Values.deploy.remediations }}
apiVersion: v1
kind: DeploymentConfig
metadata:
  labels:
    app: remediations
  name: remediations
spec:
  replicas: {{ .Values.remediations.replicas | default 1 }}
  selector:
    app: remediations
    deploymentconfig: remediations
  strategy:
    type: {{ .Values.remediations.strategy | default "Recreate" }}
    activeDeadlineSeconds: 21600
    {{ if .Values.remediations.migrationCommand }}
    recreateParams:
      mid:
        execNewPod:
          command:
          - /bin/sh
          - -c
          - {{ .Values.remediations.migrationCommand }}
          containerName: remediations
{{ if .Values.remediations.db.ca }}
          volumes:
          - rds-cacert
{{ end }}
        failurePolicy: Abort
    {{ end }}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
      {{ if .Values.remediations.migrationCommand }}
      pre:
        execNewPod:
          command:
          - /bin/sh
          - -c
          - {{ .Values.remediations.migrationCommand }}
          containerName: remediations
{{ if .Values.remediations.db.ca }}
          volumes:
          - rds-cacert
{{ end }}
        failurePolicy: Abort
      {{ end }}
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "9002"
        prometheus.io/scrape: "true"
      labels:
        app: remediations
        deploymentconfig: remediations
    spec:
      containers:
      - image: {{ .Values.imageRegistry }}/{{ .Values.imageNamespace }}/remediations:{{ .Values.remediations.istag | default "latest" }}
        imagePullPolicy: Always
        name: remediations
        ports:
        - containerPort: 9002
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /health
            port: 9002
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 2
        env:
        - name: ADVISOR_IMPL
          value: {{ .Values.remediations.advisor.impl }}
        - name: ADVISOR_HOST
          value: {{ .Values.remediations.advisor.host }}

        - name: COMPLIANCE_IMPL
          value: {{ .Values.remediations.compliance.impl }}
        - name: COMPLIANCE_HOST
          value: {{ .Values.remediations.compliance.host }}

        - name: CONTENT_SERVER_HOST
          value: {{ .Values.remediations.contentServer.host }}

{{ if .Values.deploy.postgres }}
        - name: DB_HOST
          value: postgres
        - name: DB_USERNAME
          value: postgres
{{ else }}
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              key: hostname
              name: remediation-db
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: remediation-db
{{ end }}
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: remediation-db

{{ if .Values.remediations.db.ca }}
        - name: DB_CA
          value: /opt/certs/rds-cacert
{{ end }}

        - name: DEMO_MODE
          value: "false"

        - name: INVENTORY_IMPL
          value: {{ .Values.remediations.inventory.impl }}
        - name: INVENTORY_HOST
          value: {{ .Values.remediations.inventory.host }}

        - name: LOG_LEVEL
          value: {{ .Values.remediations.logLevel }}

        - name: PATH_PREFIX
          value: {{ .Values.remediations.pathPrefix | default "/api" }}

        - name: REDIS_ENABLED
          value: "true"
        - name: REDIS_HOST
          value: redis
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: redis

        - name: CAC_IMPL
          value: {{ .Values.remediations.cac.impl }}
        - name: CAC_HOST
          value: {{ .Values.remediations.cac.host }}

        - name: SSG_IMPL
          value: {{ .Values.remediations.ssg.impl }}
        - name: SSG_HOST
          value: {{ .Values.remediations.ssg.host }}

        - name: USERS_IMPL
          value: {{ .Values.remediations.users.impl }}
        - name: USERS_HOST
          value: {{ .Values.remediations.users.host }}
        - name: USERS_INSECURE
          value: "{{ .Values.remediations.users.insecure | default false }}"
        - name: USERS_AUTH
          valueFrom:
            secretKeyRef:
              key: token
              name: backoffice

        - name: VULNERABILITIES_IMPL
          value: {{ .Values.remediations.vulnerabilities.impl }}
        - name: VULNERABILITIES_HOST
          value: {{ .Values.remediations.vulnerabilities.host }}

        resources:
          requests:
            cpu: 100m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1Gi

{{ if .Values.remediations.db.ca }}
        volumeMounts:
        - name: rds-cacert
          mountPath: /opt/certs/
          readOnly: true
      volumes:
      - name: rds-cacert
        secret:
          secretName: {{ .Values.remediations.db.ca }}
{{ end }}


      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
  triggers:
  - type: ConfigChange

{{ if .Values.remediations.imageChangeTrigger }}
  - type: ImageChange
    imageChangeParams:
      automatic: true
      containerNames:
      - remediations
      from:
        kind: ImageStreamTag
        name: remediations:{{ .Values.remediations.istag | default "latest" }}
        namespace: {{ .Values.imageNamespace }}
{{ end }}

{{ if .Values.remediations.autoscaling }}
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app: remediations
  name: remediations
spec:
  scaleTargetRef:
    kind: DeploymentConfig
    name: remediations
    apiVersion: v1
  minReplicas: {{ .Values.remediations.autoscaling.min | default 2 }}
  maxReplicas: {{ .Values.remediations.autoscaling.max | default 8 }}
  targetCPUUtilizationPercentage: 80
{{ end}}

{{ end }}
