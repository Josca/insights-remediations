// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`does not mind extra whitespace in HOSTS variable declaration 1`] = `
"---
# Red Hat Insights has recommended one or more actions for you, a system administrator, to review and if you
# deem appropriate, deploy on your systems running Red Hat software. Based on the analysis, we have automatically
# generated an Ansible Playbook for you. Please review and test the recommended actions and the Playbook as
# they may contain configuration changes, updates, reboots and/or other changes to your systems. Red Hat is not
# responsible for any adverse outcomes related to these recommendations or Playbooks.

- name: run insights to obtain latest diagnosis info
  hosts: \\"68799a02-8be9-11e8-9eb6-529269fb1459.example.com\\"
  vars:
    insights_remediation: \\"\\"
    insights_signature_exclude: \\"/hosts,/vars/insights_remediation\\"
  become: True
  tasks:
    - name: obtain diagnosis info
      command: \\"insights-client --diagnosis{{ insights_remediation | regex_search('\\\\\\\\s[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}') }}\\"
      register: insights_result
      changed_when: false
      check_mode: false
    - name: register insights report as fact for use by other plays
      set_fact: insights_report={{ insights_result.stdout }}

# Unexpected bonding behavior with incorrect syntax in bond configuration files
# Identifier: (advisor:bond_config_issue|EXTRA_WHITESPACE,fix)
# Version: a0e934f07d8167073546cbc5108c4345f92559a5
- name: Correct Bonding Config Items
  hosts: \\"68799a02-8be9-11e8-9eb6-529269fb1459.example.com\\"
  become: true
  vars:
    pydata: \\"{{ insights_report.details['bond_config_issue|BOND_CONFIG_ISSUE'] }}\\"
  tasks:

    - when: 
        - insights_report.details['bond_config_issue|BOND_CONFIG_ISSUE'] is defined
        - item.value == 2
      name: Add quotes around bonding options
      lineinfile:
        dest: \\"/etc/sysconfig/network-scripts/ifcfg-{{ item.key }}\\"
        regexp: '(^\\\\s*BONDING_OPTS=)(.*)'
        backrefs: yes
        line: '\\\\1\\"\\\\2\\"'
      with_dict: \\"{{ pydata.interface_issue_dict }}\\"

    - when:
        - insights_report.details['bond_config_issue|BOND_CONFIG_ISSUE'] is defined
        - item.value == 1
      name: lowercase yes in Slave option
      lineinfile:
        dest: \\"/etc/sysconfig/network-scripts/ifcfg-{{ item.key }}\\"
        regexp: '(^\\\\s*SLAVE=)(\\"*YES\\"*)'
        backrefs: yes
        line: '\\\\1yes'
      with_dict: \\"{{ pydata.interface_issue_dict }}\\"


- name: run insights
  hosts: \\"68799a02-8be9-11e8-9eb6-529269fb1459.example.com\\"
  vars:
    insights_signature_exclude: \\"/hosts\\"
  become: True
  gather_facts: False
  tasks:
    - name: run insights
      command: insights-client
      changed_when: false"
`;

exports[`generates a rule-based playbook 1`] = `
"---
# Red Hat Insights has recommended one or more actions for you, a system administrator, to review and if you
# deem appropriate, deploy on your systems running Red Hat software. Based on the analysis, we have automatically
# generated an Ansible Playbook for you. Please review and test the recommended actions and the Playbook as
# they may contain configuration changes, updates, reboots and/or other changes to your systems. Red Hat is not
# responsible for any adverse outcomes related to these recommendations or Playbooks.

- name: run insights to obtain latest diagnosis info
  hosts: \\"68799a02-8be9-11e8-9eb6-529269fb1459.example.com\\"
  vars:
    insights_remediation: \\"\\"
    insights_signature_exclude: \\"/hosts,/vars/insights_remediation\\"
  become: True
  tasks:
    - name: obtain diagnosis info
      command: \\"insights-client --diagnosis{{ insights_remediation | regex_search('\\\\\\\\s[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}') }}\\"
      register: insights_result
      changed_when: false
      check_mode: false
    - name: register insights report as fact for use by other plays
      set_fact: insights_report={{ insights_result.stdout }}

# Bonding will not fail over to the backup link when bonding options are partially read
# Identifier: (advisor:network_bond_opts_config_issue|NETWORK_BONDING_OPTS_DOUBLE_QUOTES_ISSUE,fix)
# Version: a0e934f07d8167073546cbc5108c4345f92559a5
- name: Correct Bonding Config Items
  hosts: \\"68799a02-8be9-11e8-9eb6-529269fb1459.example.com\\"
  become: true
  vars:
    pydata: \\"{{ insights_report.details['network_bond_opts_config_issue|NETWORK_BONDING_OPTS_DOUBLE_QUOTES_ISSUE'] }}\\"

  tasks:
    - when:
       - pydata.bond_config is defined
      block:
        - name: Add quotes around bonding options
          lineinfile:
            dest: \\"/etc/sysconfig/network-scripts/ifcfg-{{ item.key }}\\"
            regexp: '(^\\\\s*BONDING_OPTS=)(.*)'
            backrefs: yes
            line: '\\\\1\\"\\\\2\\"'
          with_dict: \\"{{ pydata.bond_config }}\\"

        - name: Restart Network Interfaces
          shell: ifdown {{item.key}}  && ifup {{item.key}}
          with_dict: \\"{{ pydata.bond_config }}\\"


- name: run insights
  hosts: \\"68799a02-8be9-11e8-9eb6-529269fb1459.example.com\\"
  vars:
    insights_signature_exclude: \\"/hosts\\"
  become: True
  gather_facts: False
  tasks:
    - name: run insights
      command: insights-client
      changed_when: false"
`;

exports[`puts quotes around hosts list 1`] = `
"---
# Red Hat Insights has recommended one or more actions for you, a system administrator, to review and if you
# deem appropriate, deploy on your systems running Red Hat software. Based on the analysis, we have automatically
# generated an Ansible Playbook for you. Please review and test the recommended actions and the Playbook as
# they may contain configuration changes, updates, reboots and/or other changes to your systems. Red Hat is not
# responsible for any adverse outcomes related to these recommendations or Playbooks.

- name: run insights to obtain latest diagnosis info
  hosts: \\"68799a02-8be9-11e8-9eb6-529269fb1459.example.com\\"
  vars:
    insights_remediation: \\"\\"
    insights_signature_exclude: \\"/hosts,/vars/insights_remediation\\"
  become: True
  tasks:
    - name: obtain diagnosis info
      command: \\"insights-client --diagnosis{{ insights_remediation | regex_search('\\\\\\\\s[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}') }}\\"
      register: insights_result
      changed_when: false
      check_mode: false
    - name: register insights report as fact for use by other plays
      set_fact: insights_report={{ insights_result.stdout }}

# Unexpected bonding behavior with incorrect syntax in bond configuration files
# Identifier: (advisor:bond_config_issue|NO_QUOTES,fix)
# Version: a0e934f07d8167073546cbc5108c4345f92559a5
- name: Correct Bonding Config Items
  hosts: \\"68799a02-8be9-11e8-9eb6-529269fb1459.example.com\\"
  become: true
  vars:
    pydata: \\"{{ insights_report.details['bond_config_issue|BOND_CONFIG_ISSUE'] }}\\"
  tasks:

    - when: 
        - insights_report.details['bond_config_issue|BOND_CONFIG_ISSUE'] is defined
        - item.value == 2
      name: Add quotes around bonding options
      lineinfile:
        dest: \\"/etc/sysconfig/network-scripts/ifcfg-{{ item.key }}\\"
        regexp: '(^\\\\s*BONDING_OPTS=)(.*)'
        backrefs: yes
        line: '\\\\1\\"\\\\2\\"'
      with_dict: \\"{{ pydata.interface_issue_dict }}\\"

    - when:
        - insights_report.details['bond_config_issue|BOND_CONFIG_ISSUE'] is defined
        - item.value == 1
      name: lowercase yes in Slave option
      lineinfile:
        dest: \\"/etc/sysconfig/network-scripts/ifcfg-{{ item.key }}\\"
        regexp: '(^\\\\s*SLAVE=)(\\"*YES\\"*)'
        backrefs: yes
        line: '\\\\1yes'
      with_dict: \\"{{ pydata.interface_issue_dict }}\\"


- name: run insights
  hosts: \\"68799a02-8be9-11e8-9eb6-529269fb1459.example.com\\"
  vars:
    insights_signature_exclude: \\"/hosts\\"
  become: True
  gather_facts: False
  tasks:
    - name: run insights
      command: insights-client
      changed_when: false"
`;
